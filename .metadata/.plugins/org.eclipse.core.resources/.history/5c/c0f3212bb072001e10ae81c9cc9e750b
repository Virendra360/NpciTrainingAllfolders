package com.npci.service;

import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.npci.beans.Account;
import com.npci.beans.Profile;
import com.npci.dao.AccountDao;
import com.npci.dao.ProfileDao;
import com.npci.dao.WalletDao;
import com.npci.validation.ProfileValidation;

@Service("registrationService") // id="registrationService"
public class ProfileServiceImpl implements ProfileService{
     @Autowired
	 private ProfileDao profileDao;
     
     //  also we are going initialize account and wallet  at time of profile creation
     @Autowired
	 private AccountDao accountDao;
     @Autowired
	 private WalletDao walletDao;
	 
	@Override
	@Transactional
	public Profile createProfile(String name, String email_id, String password, LocalDate dob, long phone) {
		   
		 ProfileValidation validate=new ProfileValidation();
		 Profile pf=new Profile(0,name,email_id,password,dob,phone);
		 
		 if(validate.validateName(name))
		 {
			 if( validate.validateEmail(email_id))
			 {
				 if(validate.validatePassword(password)) {
					  if( validate.validateDob(dob)) {
						   if( validate.validatePhone(phone)) {
							  
//           all details are in correct format so we can create profile
//	         also we are going initialize account and wallet  at time of profile creation
							  
							   Account accnt=new Account();
							   
							   
							   Profile newPf=profileDao.save(pf);
							   return newPf;
						   }
						   else {
							   throw new IllegalArgumentException("Phone number must have 10 digits..");
						   }
					  }
					  else {
						  throw new IllegalArgumentException("Age must  above 18..");
					  }
				 }
				 else {
					 throw new IllegalArgumentException("Password must have mention format..");
				 }
			 }
			 else {
				 throw new IllegalArgumentException("Provide email id with corect format..");
			 }
		 }
		 else {
			 throw new IllegalArgumentException("Name must be between 5 and 60 characters.");
		 }
	}

}
